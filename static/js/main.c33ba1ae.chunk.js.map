{"version":3,"sources":["components/header.jsx","components/subcomponents/slider.jsx","components/subcomponents/card.jsx","components/subcomponents/latest.jsx","components/subcomponents/bookmark.jsx","components/body.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js","components/subcomponents/bookmark.jpg"],"names":["Item","Menu","headerMenu","title","id","header","style","this","props","handleClick","e","preventDefault","react_default","a","createElement","className","href","es_menu","mode","map","menu","index","key","onClick","Component","slider","Meta","Card","card","_props$post","post","summary","hoverable","cover","alt","src","description","Title","Typography","latest","row","col","card_card","bookmark","imgBookmark","icon","type","es_button","disabled","size","body","latest_latest","bookmark_bookmark","footer","Date","getFullYear","App","lib","_ref","header_header","body_body","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c33ba1ae.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Menu } from 'antd';\r\n\r\nconst { Item } = Menu;\r\nconst headerMenu=[\r\n    {title: 'Latest', id: 'latest-post'},\r\n    {title: 'All Post', id: 'posts'},\r\n    {title: 'Save to Home', id: 'save-to-home'},\r\n    {title: 'Contact Us', id: 'contact-us'},\r\n];\r\n\r\nexport default class header extends Component {\r\n  render() {\r\n    const { style } = this.props;\r\n  \r\n    const handleClick = (e) => {\r\n        e.preventDefault();}\r\n\r\n    return (\r\n      <header style={style}>\r\n        <div className=\"container\">\r\n            <a href=\"./\" className=\"header-icon\" title=\"Blog\">\r\n              Blog.co\r\n            </a>\r\n            <div className=\"header-menu\">\r\n                  <Menu mode=\"horizontal\"\r\n                          >\r\n                        {headerMenu.map((menu, index) => (\r\n                            <Item key={\"header-menu-\"+index}>\r\n                                <a href={\"#\" + menu.id} onClick={handleClick}>{menu.title}</a>\r\n                            </Item>\r\n                        ))}\r\n                  </Menu>\r\n            </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function slider() {\r\n  return (\r\n      <div className=\"max-offset\">\r\n          <div className=\"sample-slider-area relative\">\r\n              <div className=\"absolute center-center\">Some Slider content!</div>\r\n          </div>\r\n      </div> \r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd';\r\nconst { Meta } = Card;\r\n\r\nexport default function card(props) {\r\n    const { title, summary } = props.post;\r\n    const index = props.index;\r\n  return (\r\n      <Card\r\n          key={\"post\" + index} \r\n          hoverable\r\n          cover={<img alt={title} src=\"https://via.placeholder.com/350x150\" className=\"img-responsive\" />}\r\n      >\r\n          <Meta\r\n              title={title}\r\n              description={summary}\r\n          />\r\n      </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Row, Col, Typography } from 'antd';\r\nimport Card from './card';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function latest() {\r\n    const latest = [\r\n        {title: \"Some title 1\", summary: \"Some Summary 1\"},\r\n        {title: \"Some title 2\", summary: \"Some Summary 2\"},\r\n        {title: \"Some title 3\", summary: \"Some Summary 3\"},\r\n        {title: \"Some title 4\", summary: \"Some Summary 4\"},\r\n        {title: \"Some title 5\", summary: \"Some Summary 5\"},\r\n        {title: \"Some title 6\", summary: \"Some Summary 6\"},\r\n        {title: \"Some title 7\", summary: \"Some Summary 7\"},\r\n        {title: \"Some title 8\", summary: \"Some Summary 8\"},\r\n        {title: \"Some title 9\", summary: \"Some Summary 9\"},\r\n        {title: \"Some title 10\", summary: \"Some Summary 10\"}\r\n    ];\r\n\r\n    return (\r\n        <div className=\"innerContainer section\">\r\n            <Title className=\"text-sm-center text-xs-left\">Our Posts\r\n                    <small>- Latest -</small>\r\n            </Title>\r\n            <Row className=\"flex-wrap xs-2 sm-3 md-4 lg-5\">\r\n                {latest.map((post, index) => (\r\n                    <Col key={\"col\"+index} >\r\n                        <Card post={post} index={index} />\r\n                    </Col>))}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Icon, Button } from 'antd';\r\nimport imgBookmark from './bookmark.jpg'; \r\nexport default class bookmark extends Component {\r\n\r\n  handleClick = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"max-offset\">\r\n        <div className=\"bookmark section\">\r\n            <div className=\"container\">\r\n                <div className=\"bookmark-grid\">\r\n                    <h2>The hype is real!\r\n                        <small>誇大広告は本物です</small></h2>\r\n                    <img id=\"image1\" src={imgBookmark} alt=\"We don't do that here\" className=\"img-responsive\" />\r\n                    <img id=\"image2\" src={imgBookmark} alt=\"We don't do that here\" className=\"img-responsive\" />\r\n                    <div className=\"bookmark-description\">\r\n                        <p>Download? We don't do that here.</p>\r\n                        <p>Simply add our site to your screen!</p>\r\n                        <p>Yes. It's that simple <Icon type=\"smile\" /></p>\r\n                        <br/>\r\n                        <p>\r\n                          <Button disabled={true} icon=\"download\" type=\"primary\" size=\"large\" >Download</Button>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Slider from './subcomponents/slider';\r\nimport Latest from './subcomponents/latest';\r\nimport Bookmark from './subcomponents/bookmark';\r\n\r\nexport default class body extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"container\">\r\n          <Slider/>\r\n          <Latest/>\r\n          <Bookmark/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function footer() {\r\n  return (\r\n    <footer>\r\n          <div className=\"container text-center\">Copyright &copy; {new Date().getFullYear()} Bloggie Ppt Llt.</div>\r\n    </footer>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport { StickyContainer, Sticky } from 'react-sticky';\n\nimport './App.css';\n\nimport Header from './components/header';\nimport Body from './components/body';\nimport Footer from './components/footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <StickyContainer>\n        <Sticky>{({style}) => <Header style={style} />}</Sticky>\n        <Body />\n        <Footer />\n      </StickyContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/bookmark.8e4c47f2.jpg\";"],"sourceRoot":""}